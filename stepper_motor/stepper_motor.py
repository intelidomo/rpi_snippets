# intelidomo.com

import time
import RPi.GPIO as GPIO

GPIO.setmode(GPIO.BCM)

class StepperMotor:
	def __init__(self, pin1, pin2, pin3, pin4, mode=2, delay=0.005, stepsbyspin=512):
		self.p1 = pin1
		self.p2 = pin2
		self.p3 = pin3
		self.p4 = pin4
		self.modo = mode
		self.delay = delay
		self.lap = 512
		GPIO.setup(pin1, GPIO.OUT)
		GPIO.setup(pin2, GPIO.OUT)
		GPIO.setup(pin3, GPIO.OUT)
		GPIO.setup(pin4, GPIO.OUT)
	def setMode(self, mode=2):
		self.modo = mode
	def setDelay(self, delay):
		self.delay = delay
	def stepForward(self):
		if self.modo==1:
			GPIO.output(self.p1, True)
			GPIO.output(self.p2, False)
			GPIO.output(self.p3, False)
			GPIO.output(self.p4, False)
			time.sleep(self.delay)
			GPIO.output(self.p1, False)
			GPIO.output(self.p2, True)
			GPIO.output(self.p3, False)
			GPIO.output(self.p4, False)
			time.sleep(self.delay)
			GPIO.output(self.p1, False)
			GPIO.output(self.p2, False)
			GPIO.output(self.p3, True)
			GPIO.output(self.p4, False)
			time.sleep(self.delay)
			GPIO.output(self.p1, False)
			GPIO.output(self.p2, False)
			GPIO.output(self.p3, False)
			GPIO.output(self.p4, True)
			time.sleep(self.delay)
		elif self.modo==2:
			GPIO.output(self.p1, True)
			GPIO.output(self.p2, True)
			GPIO.output(self.p3, False)
			GPIO.output(self.p4, False)
			time.sleep(self.delay)
			GPIO.output(self.p1, False)
			GPIO.output(self.p2, True)
			GPIO.output(self.p3, True)
			GPIO.output(self.p4, False)
			time.sleep(self.delay)
			GPIO.output(self.p1, False)
			GPIO.output(self.p2, False)
			GPIO.output(self.p3, True)
			GPIO.output(self.p4, True)
			time.sleep(self.delay)
			GPIO.output(self.p1, True)
			GPIO.output(self.p2, False)
			GPIO.output(self.p3, False)
			GPIO.output(self.p4, True)
			time.sleep(self.delay)
		elif self.modo==3:
			GPIO.output(self.p1, True)
			GPIO.output(self.p2, False)
			GPIO.output(self.p3, False)
			GPIO.output(self.p4, False)
			time.sleep(self.delay)
			GPIO.output(self.p1, True)
			GPIO.output(self.p2, True)
			GPIO.output(self.p3, False)
			GPIO.output(self.p4, False)
			time.sleep(self.delay)
			GPIO.output(self.p1, False)
			GPIO.output(self.p2, True)
			GPIO.output(self.p3, False)
			GPIO.output(self.p4, False)
			time.sleep(self.delay)
			GPIO.output(self.p1, False)
			GPIO.output(self.p2, True)
			GPIO.output(self.p3, True)
			GPIO.output(self.p4, False)
			time.sleep(self.delay)
			GPIO.output(self.p1, False)
			GPIO.output(self.p2, False)
			GPIO.output(self.p3, True)
			GPIO.output(self.p4, False)
			time.sleep(self.delay)
			GPIO.output(self.p1, False)
			GPIO.output(self.p2, False)
			GPIO.output(self.p3, True)
			GPIO.output(self.p4, True)
			time.sleep(self.delay)
			GPIO.output(self.p1, False)
			GPIO.output(self.p2, False)
			GPIO.output(self.p3, False)
			GPIO.output(self.p4, True)
			time.sleep(self.delay)
			GPIO.output(self.p1, True)
			GPIO.output(self.p2, False)
			GPIO.output(self.p3, False)
			GPIO.output(self.p4, True)
			time.sleep(self.delay)
	def stepBackward(self):
		if self.modo==1:
			GPIO.output(self.p1, False)
			GPIO.output(self.p2, False)
			GPIO.output(self.p3, False)
			GPIO.output(self.p4, True)
			time.sleep(self.delay)
			GPIO.output(self.p1, False)
			GPIO.output(self.p2, False)
			GPIO.output(self.p3, True)
			GPIO.output(self.p4, False)
			time.sleep(self.delay)
			GPIO.output(self.p1, False)
			GPIO.output(self.p2, True)
			GPIO.output(self.p3, False)
			GPIO.output(self.p4, False)
			time.sleep(self.delay)
			GPIO.output(self.p1, True)
			GPIO.output(self.p2, False)
			GPIO.output(self.p3, False)
			GPIO.output(self.p4, False)
			time.sleep(self.delay)
		elif self.modo==2:
			GPIO.output(self.p1, True)
			GPIO.output(self.p2, False)
			GPIO.output(self.p3, False)
			GPIO.output(self.p4, True)
			time.sleep(self.delay)
			GPIO.output(self.p1, False)
			GPIO.output(self.p2, False)
			GPIO.output(self.p3, True)
			GPIO.output(self.p4, True)
			time.sleep(self.delay)
			GPIO.output(self.p1, False)
			GPIO.output(self.p2, True)
			GPIO.output(self.p3, True)
			GPIO.output(self.p4, False)
			time.sleep(self.delay)
			GPIO.output(self.p1, True)
			GPIO.output(self.p2, True)
			GPIO.output(self.p3, False)
			GPIO.output(self.p4, False)
			time.sleep(self.delay)
		elif self.modo==3:
			GPIO.output(self.p1, True)
			GPIO.output(self.p2, False)
			GPIO.output(self.p3, False)
			GPIO.output(self.p4, True)
			time.sleep(self.delay)
			GPIO.output(self.p1, False)
			GPIO.output(self.p2, False)
			GPIO.output(self.p3, False)
			GPIO.output(self.p4, True)
			time.sleep(self.delay)
			GPIO.output(self.p1, False)
			GPIO.output(self.p2, False)
			GPIO.output(self.p3, True)
			GPIO.output(self.p4, True)
			time.sleep(self.delay)
			GPIO.output(self.p1, False)
			GPIO.output(self.p2, False)
			GPIO.output(self.p3, True)
			GPIO.output(self.p4, False)
			time.sleep(self.delay)
			GPIO.output(self.p1, False)
			GPIO.output(self.p2, True)
			GPIO.output(self.p3, True)
			GPIO.output(self.p4, False)
			time.sleep(self.delay)
			GPIO.output(self.p1, False)
			GPIO.output(self.p2, True)
			GPIO.output(self.p3, False)
			GPIO.output(self.p4, False)
			time.sleep(self.delay)
			GPIO.output(self.p1, True)
			GPIO.output(self.p2, True)
			GPIO.output(self.p3, False)
			GPIO.output(self.p4, False)
			time.sleep(self.delay)
			GPIO.output(self.p1, True)
			GPIO.output(self.p2, False)
			GPIO.output(self.p3, False)
			GPIO.output(self.p4, False)
			time.sleep(self.delay)
	def goForward(self, steps=1):
		for i in range(steps):
			self.stepForward()
		self.off()
	def goBackwards(self, steps=1):
		for i in range(steps):
			self.stepBackward()
		self.off()
	def clockwise(self, degrees=360):
		steps = self.lap*degrees/360
		self.goForward(int(steps))
	def anticlockwise(self, degrees=360):
		steps = self.lap*degrees/360
		self.goBackwards(int(steps))
	def off(self):
		GPIO.output(self.p1, False)
		GPIO.output(self.p2, False)
		GPIO.output(self.p3, False)
		GPIO.output(self.p4, False)
